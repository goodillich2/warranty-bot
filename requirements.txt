import logging
from aiogram import Bot, Dispatcher, types
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
from aiogram.utils import executor
from data_loader import search_model, get_usd_rate

API_TOKEN = "8097292310:AAGsi0tjJZoR43JI_kc7tGv6Tp2qz2iQeWQ"

logging.basicConfig(level=logging.INFO)
bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)

# –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ –º–æ–¥–µ–ª–∏
popular_models = [
    "12", "12 Pro Max", "13", "13 Pro", "13 Pro Max",
    "14", "14 Pro", "14 Pro Max", "15", "15 Pro",
    "15 Pro Max", "16", "16 Pro", "16 Pro Max"
]

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞
popular_keyboard = ReplyKeyboardMarkup(resize_keyboard=True)
for i in range(0, len(popular_models), 2):
    row = popular_models[i:i+2]
    popular_keyboard.row(*(KeyboardButton(m) for m in row))

@dp.message_handler(commands=['start'])
async def start_cmd(message: types.Message):
    await message.answer("üîç –ù–∞–ø–∏—à–∏ –º–æ–¥–µ–ª—å (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥: 12 Pro Max)", reply_markup=popular_keyboard)

@dp.message_handler(commands=['rate'])
async def usd_rate_cmd(message: types.Message):
    rate = get_usd_rate()
    await message.answer(f"üí± –ü–æ—Ç–æ—á–Ω–∏–π –∫—É—Ä—Å –¥–æ–ª–∞—Ä–∞: {rate} –≥—Ä–Ω")

@dp.message_handler()
async def search(message: types.Message):
    query = message.text.strip()
    results = search_model(query)

    if not results:
        await message.answer("‚ùå –ù—ñ—á–æ–≥–æ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ.")
        return

    await message.answer(f"üîé –ó–Ω–∞–π–¥–µ–Ω–æ –º–æ–¥–µ–ª–µ–π: {len(results)}")

    for item in results:
        serials = item['–°–µ—Ä–∏–π–Ω—ã–µ –Ω–æ–º–µ—Ä–∞']
        text = (
            f"üì± <b>{item['–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ']}</b>\n"
            f"üî¢ –°–µ—Ä—ñ–π–Ω–∏–π: {serials}\n"
            f"üíµ –¶—ñ–Ω–∞: {item['–†–æ–∑–Ω–∏—á–Ω–∞—è']} $\n"
            f"üá∫üá¶ –í –≥—Ä–∏–≤–Ω—ñ: {item['–¶—ñ–Ω–∞ –≤ –≥—Ä–Ω']} –≥—Ä–Ω"
        )
        await message.answer(text, parse_mode="HTML")

if __name__ == "__main__":
    executor.start_polling(dp, skip_updates=True)
